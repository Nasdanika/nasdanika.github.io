<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Nasdanika Graph"><sessioninfo id="Pavel-U400-548feb12" start="1676915670017" dump="1676915671039"/><package name="org/nasdanika/graph/processor"><class name="org/nasdanika/graph/processor/HandlerType" sourcefilename="HandlerType.java"><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ReflectiveProcessorFactory$3" sourcefilename="ReflectiveProcessorFactory.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ReflectiveProcessorFactory;Ljava/util/Map;Lorg/nasdanika/graph/processor/ProcessorConfig;)V" line="244"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildProcessorsInfo" desc="()Ljava/util/Map;" line="248"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentProcessorInfo" desc="()Ljava/util/concurrent/CompletionStage;" line="253"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistry" desc="()Ljava/util/concurrent/CompletionStage;" line="258"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/nasdanika/graph/Element;" line="263"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/IncomingHandlerConsumers" sourcefilename="IncomingHandlerConsumers.java"/><class name="org/nasdanika/graph/processor/ReflectiveProcessorFactory$1" sourcefilename="ReflectiveProcessorFactory.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ReflectiveProcessorFactory;Ljava/util/Map;Lorg/nasdanika/graph/processor/ProcessorConfig;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V" line="146"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildProcessorsInfo" desc="()Ljava/util/Map;" line="150"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentProcessorInfo" desc="()Ljava/util/concurrent/CompletionStage;" line="155"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistry" desc="()Ljava/util/concurrent/CompletionStage;" line="160"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/nasdanika/graph/Node;" line="165"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncomingEndpoints" desc="()Ljava/util/Map;" line="170"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncomingHandlerConsumers" desc="()Ljava/util/Map;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutgoingEndpoints" desc="()Ljava/util/Map;" line="180"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutgoingHandlerConsumers" desc="()Ljava/util/Map;" line="185"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ReflectiveProcessorFactory$2" sourcefilename="ReflectiveProcessorFactory.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ReflectiveProcessorFactory;Ljava/util/Map;Lorg/nasdanika/graph/processor/ProcessorConfig;ZLorg/nasdanika/graph/processor/ConnectionProcessorConfig;ZZZ)V" line="195"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildProcessorsInfo" desc="()Ljava/util/Map;" line="199"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentProcessorInfo" desc="()Ljava/util/concurrent/CompletionStage;" line="204"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistry" desc="()Ljava/util/concurrent/CompletionStage;" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/nasdanika/graph/Connection;" line="214"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceEndpoint" desc="()Ljava/util/concurrent/CompletionStage;" line="219"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSourceHandler" desc="(Ljava/lang/Object;)V" line="224"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTargetEndpoint" desc="()Ljava/util/concurrent/CompletionStage;" line="232"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTargetHandler" desc="(Ljava/lang/Object;)V" line="237"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/TargetEndpoint" sourcefilename="TargetEndpoint.java"/><class name="org/nasdanika/graph/processor/OutgoingHandlerConsumers" sourcefilename="OutgoingHandlerConsumers.java"/><class name="org/nasdanika/graph/processor/ChildProcessors" sourcefilename="ChildProcessors.java"/><class name="org/nasdanika/graph/processor/NodeProcessorConfig" sourcefilename="NodeProcessorConfig.java"/><class name="org/nasdanika/graph/processor/OutgoingEndpoint" sourcefilename="OutgoingEndpoint.java"/><class name="org/nasdanika/graph/processor/ProcessorFactory" sourcefilename="ProcessorFactory.java"><method name="isPassThrough" desc="(Lorg/nasdanika/graph/Connection;)Z" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProcessor" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/ProgressMonitor;)Lorg/nasdanika/graph/processor/ProcessorInfo;" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProcessors" desc="(Lorg/nasdanika/common/ProgressMonitor;[Lorg/nasdanika/graph/Element;)Ljava/util/Map;" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProcessors" desc="(Ljava/util/Collection;Lorg/nasdanika/common/ProgressMonitor;)Ljava/util/Map;" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProcessors" desc="(Ljava/util/stream/Stream;Lorg/nasdanika/common/ProgressMonitor;)Ljava/util/Map;" line="66"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compose" desc="(Lorg/nasdanika/graph/processor/ProcessorFactory;)Lorg/nasdanika/graph/processor/ProcessorFactory;" line="80"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compose" desc="(Ljava/util/stream/Stream;)Ljava/util/Optional;" line="114"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessors$2" desc="(Ljava/util/Map;Lorg/nasdanika/graph/processor/Helper;)V" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessors$1" desc="(Ljava/util/function/BiFunction;Lorg/nasdanika/graph/Element;)Lorg/nasdanika/graph/processor/Helper;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessors$0" desc="(Lorg/nasdanika/graph/processor/ProcessorFactoryVisitor;Lorg/nasdanika/common/ProgressMonitor;Lorg/nasdanika/graph/Element;Ljava/util/Map;)Lorg/nasdanika/graph/processor/Helper;" line="67"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ProcessorConfig" sourcefilename="ProcessorConfig.java"/><class name="org/nasdanika/graph/processor/ParentProcessor" sourcefilename="ParentProcessor.java"/><class name="org/nasdanika/graph/processor/ConnectionProcessorConfig" sourcefilename="ConnectionProcessorConfig.java"/><class name="org/nasdanika/graph/processor/Processor" sourcefilename="Processor.java"/><class name="org/nasdanika/graph/processor/Registry" sourcefilename="Registry.java"/><class name="org/nasdanika/graph/processor/IncomingEndpoints" sourcefilename="IncomingEndpoints.java"/><class name="org/nasdanika/graph/processor/NopEndpointReflectiveProcessorFactory" sourcefilename="NopEndpointReflectiveProcessorFactory.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/IntrospectionLevel;[Ljava/lang/Object;)V" line="13"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ProcessorInfo$1" sourcefilename="ProcessorInfo.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Ljava/lang/Object;Ljava/util/function/Supplier;)V" line="20"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfig" desc="()Lorg/nasdanika/graph/processor/ProcessorConfig;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessor" desc="()Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFailures" desc="()Ljava/util/Collection;" line="34"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/Helper" sourcefilename="Helper.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ProcessorInfo;)V" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessorInfo" desc="()Lorg/nasdanika/graph/processor/ProcessorInfo;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/IntrospectionLevel" sourcefilename="IntrospectionLevel.java"><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/IncomingHandler" sourcefilename="IncomingHandler.java"/><class name="org/nasdanika/graph/processor/ChildProcessor" sourcefilename="ChildProcessor.java"/><class name="org/nasdanika/graph/processor/OutgoingEndpoints" sourcefilename="OutgoingEndpoints.java"/><class name="org/nasdanika/graph/processor/Factory" sourcefilename="Factory.java"/><class name="org/nasdanika/graph/processor/TargetHandler" sourcefilename="TargetHandler.java"/><class name="org/nasdanika/graph/processor/RegistryEntry" sourcefilename="RegistryEntry.java"/><class name="org/nasdanika/graph/processor/ReflectiveProcessorFactory" sourcefilename="ReflectiveProcessorFactory.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/IntrospectionLevel;[Ljava/lang/Object;)V" line="52"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProcessors" desc="(Lorg/nasdanika/graph/Element;Lorg/nasdanika/graph/processor/IntrospectionLevel;Lorg/nasdanika/common/ProgressMonitor;[Ljava/lang/Object;)Ljava/util/Map;" line="58"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProcessor" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/ProgressMonitor;)Lorg/nasdanika/graph/processor/ProcessorInfo;" line="69"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProcessor" desc="(Ljava/lang/Object;Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/IntrospectionLevel;Lorg/nasdanika/common/ProgressMonitor;)Lorg/nasdanika/graph/processor/ProcessorInfo;" line="83"><counter type="INSTRUCTION" missed="399" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="74" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareProcessorMethods" desc="(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I" line="311"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireRegistryEntry" desc="(Ljava/lang/Object;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Ljava/util/function/Consumer;" line="339"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireRegistry" desc="(Ljava/lang/Object;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Ljava/util/function/Consumer;" line="357"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireProcessorElement" desc="(Ljava/lang/Object;Lorg/nasdanika/graph/Element;Lorg/nasdanika/graph/processor/IntrospectionLevel;)V" line="369"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireParentProcessor" desc="(Ljava/lang/Object;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Ljava/util/function/Consumer;" line="380"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireChildProcessor" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Ljava/util/Map;" line="398"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireChildProcessors" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;)V" line="420"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchIncomingHandler" desc="(Ljava/lang/reflect/AnnotatedElement;Lorg/nasdanika/graph/Connection;)Z" line="431"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireIncomingHandler" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Ljava/util/Map;" line="457"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireIncomingHandlerConsumers" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;)V" line="487"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchIncomingEndpoint" desc="(Ljava/lang/reflect/AnnotatedElement;Lorg/nasdanika/graph/Connection;)Z" line="498"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireIncomingEndpoint" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;Ljava/util/function/BiFunction;)Ljava/util/Map;" line="523"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireIncomingEndpoints" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;)V" line="558"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchOutgoingHandler" desc="(Ljava/lang/reflect/AnnotatedElement;Lorg/nasdanika/graph/Connection;)Z" line="569"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireOutgoingHandler" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Ljava/util/Map;" line="594"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireOutgoingHandlerConsumers" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;)V" line="624"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchOutgoingEndpoint" desc="(Ljava/lang/reflect/AnnotatedElement;Lorg/nasdanika/graph/Connection;)Z" line="635"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireOutgoingEndpoint" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;Ljava/util/function/BiFunction;)Ljava/util/Map;" line="660"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireOutgoingEndpoints" desc="(Ljava/lang/Object;Ljava/util/Map;Lorg/nasdanika/graph/processor/IntrospectionLevel;)V" line="695"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireTargetHandler" desc="(Ljava/lang/Object;Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Z" line="708"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireTargetEndpoint" desc="(Ljava/lang/Object;Ljava/util/concurrent/CompletionStage;Lorg/nasdanika/graph/processor/IntrospectionLevel;Ljava/util/function/BiFunction;)Z" line="727"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireSourceHandler" desc="(Ljava/lang/Object;Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Z" line="748"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wireSourceEndpoint" desc="(Ljava/lang/Object;Ljava/util/concurrent/CompletionStage;Lorg/nasdanika/graph/processor/IntrospectionLevel;Ljava/util/function/BiFunction;)Z" line="767"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchFactoryMethod" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Ljava/lang/reflect/Method;)Z" line="783"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchPredicate" desc="(Ljava/lang/Object;Ljava/lang/String;)Z" line="815"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethods" desc="(Ljava/lang/Class;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Ljava/util/stream/Stream;" line="833"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFields" desc="(Ljava/lang/Class;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Ljava/util/stream/Stream;" line="857"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldsAndMethods" desc="(Ljava/lang/Class;Lorg/nasdanika/graph/processor/IntrospectionLevel;)Ljava/util/stream/Stream;" line="878"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldValue" desc="(Ljava/lang/Object;Ljava/lang/reflect/Field;)Ljava/lang/Object;" line="888"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFieldValue" desc="(Ljava/lang/Object;Ljava/lang/reflect/Field;Ljava/lang/Object;)V" line="911"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;" line="934"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canSet" desc="(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z" line="950"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mustSet" desc="(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/String;)Z" line="961"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Object;)V" line="968"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/Object;" line="978"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canGet" desc="(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z" line="989"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mustGet" desc="(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/String;)Z" line="1000"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValueSupplier" desc="(Ljava/lang/reflect/AnnotatedElement;)Z" line="1007"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEvaluationContext" desc="()Lorg/springframework/expression/EvaluationContext;" line="1011"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireSourceEndpoint$82" desc="(Ljava/lang/Object;Ljava/util/Optional;Ljava/lang/Object;)V" line="775"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireSourceEndpoint$81" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="769"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireSourceEndpoint$80" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="768"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireSourceHandler$79" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="750"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireSourceHandler$78" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="749"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireTargetEndpoint$77" desc="(Ljava/lang/Object;Ljava/util/Optional;Ljava/lang/Object;)V" line="735"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireTargetEndpoint$76" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="729"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireTargetEndpoint$75" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="728"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireTargetHandler$74" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="710"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireTargetHandler$73" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="709"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoints$72" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)V" line="698"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoints$71" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="697"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoints$70" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="696"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoint$69" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/Map;Ljava/util/Map$Entry;)V" line="670"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoint$68" desc="(Ljava/lang/reflect/AccessibleObject;Ljava/lang/Object;Ljava/util/Map$Entry;Ljava/lang/Object;)V" line="673"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoint$67" desc="(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I" line="668"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoint$66" desc="(Ljava/util/Map$Entry;)Z" line="667"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoint$65" desc="(Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)Ljava/util/stream/Stream;" line="666"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoint$64" desc="(Ljava/lang/reflect/AccessibleObject;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="666"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingEndpoint$63" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="665"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingHandlerConsumers$62" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)V" line="627"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingHandlerConsumers$61" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="626"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingHandlerConsumers$60" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="625"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingHandler$59" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map$Entry;)V" line="604"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingHandler$58" desc="(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I" line="602"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingHandler$57" desc="(Ljava/util/Map$Entry;)Z" line="601"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingHandler$56" desc="(Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)Ljava/util/stream/Stream;" line="600"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingHandler$55" desc="(Ljava/lang/reflect/AccessibleObject;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="600"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireOutgoingHandler$54" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="599"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoints$53" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)V" line="561"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoints$52" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="560"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoints$51" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="559"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoint$50" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/Map;Ljava/util/Map$Entry;)V" line="533"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoint$49" desc="(Ljava/lang/reflect/AccessibleObject;Ljava/lang/Object;Ljava/util/Map$Entry;Ljava/lang/Object;)V" line="536"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoint$48" desc="(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I" line="531"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoint$47" desc="(Ljava/util/Map$Entry;)Z" line="530"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoint$46" desc="(Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)Ljava/util/stream/Stream;" line="529"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoint$45" desc="(Ljava/lang/reflect/AccessibleObject;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="529"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingEndpoint$44" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="528"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingHandlerConsumers$43" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)V" line="490"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingHandlerConsumers$42" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="489"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingHandlerConsumers$41" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="488"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingHandler$40" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map$Entry;)V" line="467"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingHandler$39" desc="(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I" line="465"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingHandler$38" desc="(Ljava/util/Map$Entry;)Z" line="464"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingHandler$37" desc="(Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)Ljava/util/stream/Stream;" line="463"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingHandler$36" desc="(Ljava/lang/reflect/AccessibleObject;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="463"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireIncomingHandler$35" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="462"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireChildProcessors$34" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)V" line="423"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireChildProcessors$33" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="422"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireChildProcessors$32" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="421"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireChildProcessor$31" desc="(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/reflect/AccessibleObject;)V" line="404"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireChildProcessor$30" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="402"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireChildProcessor$29" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="401"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireParentProcessor$28" desc="(Ljava/util/List;Ljava/lang/Object;Lorg/nasdanika/graph/processor/ProcessorInfo;)V" line="386"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireParentProcessor$27" desc="(Ljava/lang/Object;Lorg/nasdanika/graph/processor/ProcessorInfo;Ljava/lang/reflect/AccessibleObject;)V" line="387"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireParentProcessor$26" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="382"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireParentProcessor$25" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="381"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireProcessorElement$24" desc="(Ljava/lang/Object;Lorg/nasdanika/graph/Element;Ljava/lang/reflect/AccessibleObject;)V" line="373"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireProcessorElement$23" desc="(Lorg/nasdanika/graph/Element;Ljava/lang/reflect/AccessibleObject;)Z" line="371"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireProcessorElement$22" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="370"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireRegistry$21" desc="(Ljava/util/List;Ljava/lang/Object;Ljava/util/Map;)V" line="362"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireRegistry$20" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/reflect/AccessibleObject;)V" line="362"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireRegistry$19" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="359"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireRegistry$18" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="358"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireRegistryEntry$17" desc="(Ljava/util/List;Ljava/lang/Object;Ljava/util/Map;)V" line="345"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireRegistryEntry$16" desc="(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/reflect/AccessibleObject;)V" line="346"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireRegistryEntry$15" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="341"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wireRegistryEntry$14" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="340"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$13" desc="(Ljava/lang/Object;Ljava/lang/reflect/AccessibleObject;)Ljava/util/stream/Stream;" line="295"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$12" desc="(Ljava/lang/reflect/AccessibleObject;Ljava/lang/Object;)Ljava/util/Map$Entry;" line="295"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$11" desc="(Ljava/lang/reflect/AccessibleObject;Ljava/lang/reflect/AccessibleObject;)I" line="294"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$10" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="293"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$9" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Ljava/lang/reflect/AccessibleObject;)Z" line="292"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$8" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="291"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$7" desc="(Ljava/lang/Object;Ljava/lang/reflect/AccessibleObject;)Ljava/util/Map$Entry;" line="279"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$6" desc="(Ljava/lang/reflect/AccessibleObject;Ljava/lang/reflect/AccessibleObject;)I" line="278"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$5" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="277"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$4" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Ljava/lang/reflect/AccessibleObject;)Z" line="276"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$3" desc="(Ljava/lang/reflect/AccessibleObject;)Z" line="275"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$2" desc="(Ljava/util/Collection;)Ljava/util/Collection;" line="269"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$1" desc="(Ljava/util/Collection;Ljava/lang/Void;Ljava/lang/Throwable;)Lorg/nasdanika/graph/processor/ProcessorInfo;" line="111"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$0" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Ljava/lang/reflect/Method;)Z" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2567" covered="0"/><counter type="BRANCH" missed="284" covered="0"/><counter type="LINE" missed="430" covered="0"/><counter type="COMPLEXITY" missed="268" covered="0"/><counter type="METHOD" missed="126" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/SourceEndpoint" sourcefilename="SourceEndpoint.java"/><class name="org/nasdanika/graph/processor/SourceHandler" sourcefilename="SourceHandler.java"/><class name="org/nasdanika/graph/processor/NopEndpointProcessorFactory" sourcefilename="NopEndpointProcessorFactory.java"><method name="createEndpoint" desc="(Lorg/nasdanika/graph/Connection;Ljava/lang/Object;Lorg/nasdanika/graph/processor/HandlerType;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ProcessorFactoryVisitor$1" sourcefilename="ProcessorFactoryVisitor.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ProcessorFactoryVisitor;Lorg/nasdanika/graph/Node;Ljava/util/Map;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/Map;Ljava/util/Map;)V" line="120"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/nasdanika/graph/Node;" line="124"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildProcessorsInfo" desc="()Ljava/util/Map;" line="129"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentProcessorInfo" desc="()Ljava/util/concurrent/CompletableFuture;" line="136"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistry" desc="()Ljava/util/concurrent/CompletableFuture;" line="141"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncomingEndpoints" desc="()Ljava/util/Map;" line="146"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncomingHandlerConsumers" desc="()Ljava/util/Map;" line="151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutgoingEndpoints" desc="()Ljava/util/Map;" line="156"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutgoingHandlerConsumers" desc="()Ljava/util/Map;" line="161"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getOutgoingEndpoints$2" desc="(Lorg/nasdanika/graph/Node;)Ljava/util/Map;" line="156"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getIncomingEndpoints$1" desc="(Lorg/nasdanika/graph/Node;)Ljava/util/Map;" line="146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getChildProcessorsInfo$0" desc="(Ljava/util/Map;Ljava/util/Map$Entry;)V" line="130"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ProcessorFactory$1" sourcefilename="ProcessorFactory.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ProcessorFactory;Lorg/nasdanika/graph/processor/ProcessorFactory;)V" line="84"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createEndpoint" desc="(Lorg/nasdanika/graph/Connection;Ljava/lang/Object;Lorg/nasdanika/graph/processor/HandlerType;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProcessor" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/ProgressMonitor;)Lorg/nasdanika/graph/processor/ProcessorInfo;" line="98"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ProcessorFactoryVisitor$2" sourcefilename="ProcessorFactoryVisitor.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ProcessorFactoryVisitor;Lorg/nasdanika/graph/Connection;Ljava/util/Map;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V" line="179"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/nasdanika/graph/Connection;" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildProcessorsInfo" desc="()Ljava/util/Map;" line="188"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentProcessorInfo" desc="()Ljava/util/concurrent/CompletableFuture;" line="195"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistry" desc="()Ljava/util/concurrent/CompletableFuture;" line="200"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceEndpoint" desc="()Ljava/util/concurrent/CompletionStage;" line="205"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSourceHandler" desc="(Ljava/lang/Object;)V" line="210"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTargetEndpoint" desc="()Ljava/util/concurrent/CompletionStage;" line="217"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTargetHandler" desc="(Ljava/lang/Object;)V" line="222"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getChildProcessorsInfo$0" desc="(Ljava/util/Map;Ljava/util/Map$Entry;)V" line="189"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ProcessorInfo" sourcefilename="ProcessorInfo.java"><method name="of" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/nasdanika/graph/processor/ProcessorInfo;" line="20"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ProcessorFactoryVisitor$3" sourcefilename="ProcessorFactoryVisitor.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ProcessorFactoryVisitor;Lorg/nasdanika/graph/Element;Ljava/util/Map;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V" line="229"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/nasdanika/graph/Element;" line="233"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildProcessorsInfo" desc="()Ljava/util/Map;" line="238"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentProcessorInfo" desc="()Ljava/util/concurrent/CompletableFuture;" line="245"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistry" desc="()Ljava/util/concurrent/CompletableFuture;" line="250"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getChildProcessorsInfo$0" desc="(Ljava/util/Map;Ljava/util/Map$Entry;)V" line="239"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/IncomingEndpoint" sourcefilename="IncomingEndpoint.java"/><class name="org/nasdanika/graph/processor/ProcessorFactoryVisitor$4" sourcefilename="ProcessorFactoryVisitor.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ProcessorFactoryVisitor;Lorg/nasdanika/graph/processor/ProcessorInfo;Ljava/util/concurrent/CompletableFuture;Ljava/util/Map;Ljava/util/concurrent/CompletableFuture;)V" line="267"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setParentProcessorInfo" desc="(Lorg/nasdanika/graph/processor/ProcessorInfo;)V" line="271"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRegistry" desc="(Ljava/util/Map;)V" line="276"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setRegistry$0" desc="(Ljava/util/Map;Lorg/nasdanika/graph/processor/Helper;)V" line="276"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/ProcessorFactoryVisitor" sourcefilename="ProcessorFactoryVisitor.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ProcessorFactory;)V" line="27"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistry" desc="()Ljava/util/Map;" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createElementProcessor" desc="(Lorg/nasdanika/graph/Element;Ljava/util/Map;Lorg/nasdanika/common/ProgressMonitor;)Lorg/nasdanika/graph/processor/Helper;" line="50"><counter type="INSTRUCTION" missed="322" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$18" desc="(Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/graph/processor/Helper;)V" line="259"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$17" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="177"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$16" desc="(Lorg/nasdanika/graph/Node;)Ljava/util/Map;" line="177"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$15" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="176"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$14" desc="(Lorg/nasdanika/graph/Node;)Ljava/util/Map;" line="176"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$13" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="174"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$12" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$11" desc="(Ljava/util/concurrent/CompletableFuture;Lorg/nasdanika/graph/Connection;Ljava/lang/Object;)V" line="114"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$10" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$9" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$8" desc="(Lorg/nasdanika/graph/Node;)Ljava/util/Map;" line="105"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$7" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="94"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$6" desc="(Lorg/nasdanika/graph/Node;)Ljava/util/Map;" line="93"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$5" desc="(Ljava/util/concurrent/CompletableFuture;Lorg/nasdanika/graph/Connection;Ljava/lang/Object;)V" line="84"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$4" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$3" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="76"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$2" desc="(Lorg/nasdanika/graph/Node;)Ljava/util/Map;" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$1" desc="(Lorg/nasdanika/graph/Connection;)Ljava/util/concurrent/CompletableFuture;" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createElementProcessor$0" desc="(Lorg/nasdanika/graph/Node;)Ljava/util/Map;" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="448" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="75" covered="0"/><counter type="COMPLEXITY" missed="41" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/OutgoingHandler" sourcefilename="OutgoingHandler.java"/><class name="org/nasdanika/graph/processor/ProcessorElement" sourcefilename="ProcessorElement.java"/><class name="org/nasdanika/graph/processor/Factories" sourcefilename="Factories.java"/><sourcefile name="Registry.java"/><sourcefile name="OutgoingEndpoint.java"/><sourcefile name="Factory.java"/><sourcefile name="ParentProcessor.java"/><sourcefile name="IncomingEndpoints.java"/><sourcefile name="IncomingHandler.java"/><sourcefile name="NodeProcessorConfig.java"/><sourcefile name="Processor.java"/><sourcefile name="ProcessorFactory.java"><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="0" cb="0"/><line nr="68" mi="13" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="2" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="15" ci="0" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="11" ci="0" mb="2" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ProcessorElement.java"/><sourcefile name="OutgoingHandler.java"/><sourcefile name="HandlerType.java"><line nr="8" mi="20" ci="0" mb="0" cb="0"/><line nr="13" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntrospectionLevel.java"><line nr="8" mi="16" ci="0" mb="0" cb="0"/><line nr="13" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SourceHandler.java"/><sourcefile name="ConnectionProcessorConfig.java"/><sourcefile name="IncomingHandlerConsumers.java"/><sourcefile name="ReflectiveProcessorFactory.java"><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="2" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="10" ci="0" mb="0" cb="0"/><line nr="59" mi="16" ci="0" mb="2" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="2" cb="0"/><line nr="70" mi="17" ci="0" mb="2" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="18" ci="0" mb="6" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="11" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="2" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="10" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="2" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="10" ci="0" mb="2" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="2" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="10" ci="0" mb="2" cb="0"/><line nr="143" mi="7" ci="0" mb="0" cb="0"/><line nr="144" mi="10" ci="0" mb="2" cb="0"/><line nr="146" mi="35" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="2" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="8" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="8" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="195" mi="39" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="9" ci="0" mb="2" cb="0"/><line nr="224" mi="3" ci="0" mb="2" cb="0"/><line nr="225" mi="7" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="9" ci="0" mb="2" cb="0"/><line nr="237" mi="3" ci="0" mb="2" cb="0"/><line nr="238" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="244" mi="19" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="12" ci="0" mb="2" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="12" ci="0" mb="2" cb="0"/><line nr="276" mi="13" ci="0" mb="0" cb="0"/><line nr="277" mi="9" ci="0" mb="0" cb="0"/><line nr="278" mi="16" ci="0" mb="0" cb="0"/><line nr="279" mi="12" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="10" ci="0" mb="2" cb="0"/><line nr="284" mi="10" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="2" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="12" ci="0" mb="2" cb="0"/><line nr="292" mi="13" ci="0" mb="0" cb="0"/><line nr="293" mi="9" ci="0" mb="0" cb="0"/><line nr="294" mi="16" ci="0" mb="0" cb="0"/><line nr="295" mi="19" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="10" ci="0" mb="2" cb="0"/><line nr="300" mi="10" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="2" cb="0"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="304" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="12" ci="0" mb="0" cb="0"/><line nr="312" mi="2" ci="0" mb="2" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="6" ci="0" mb="0" cb="0"/><line nr="317" mi="6" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="2" cb="0"/><line nr="319" mi="4" ci="0" mb="2" cb="0"/><line nr="321" mi="2" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="2" cb="0"/><line nr="325" mi="2" ci="0" mb="0" cb="0"/><line nr="330" mi="6" ci="0" mb="0" cb="0"/><line nr="331" mi="2" ci="0" mb="2" cb="0"/><line nr="332" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="11" ci="0" mb="2" cb="0"/><line nr="341" mi="8" ci="0" mb="0" cb="0"/><line nr="342" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="6" ci="0" mb="0" cb="0"/><line nr="346" mi="11" ci="0" mb="2" cb="0"/><line nr="347" mi="5" ci="0" mb="0" cb="0"/><line nr="348" mi="7" ci="0" mb="2" cb="0"/><line nr="349" mi="16" ci="0" mb="2" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="1" ci="0" mb="0" cb="0"/><line nr="353" mi="1" ci="0" mb="0" cb="0"/><line nr="357" mi="5" ci="0" mb="0" cb="0"/><line nr="358" mi="11" ci="0" mb="2" cb="0"/><line nr="359" mi="8" ci="0" mb="0" cb="0"/><line nr="360" mi="4" ci="0" mb="0" cb="0"/><line nr="362" mi="18" ci="0" mb="0" cb="0"/><line nr="369" mi="5" ci="0" mb="0" cb="0"/><line nr="370" mi="12" ci="0" mb="2" cb="0"/><line nr="371" mi="15" ci="0" mb="0" cb="0"/><line nr="372" mi="1" ci="0" mb="0" cb="0"/><line nr="373" mi="5" ci="0" mb="0" cb="0"/><line nr="374" mi="1" ci="0" mb="0" cb="0"/><line nr="375" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="5" ci="0" mb="0" cb="0"/><line nr="381" mi="11" ci="0" mb="2" cb="0"/><line nr="382" mi="8" ci="0" mb="0" cb="0"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="5" ci="0" mb="0" cb="0"/><line nr="386" mi="6" ci="0" mb="0" cb="0"/><line nr="387" mi="5" ci="0" mb="0" cb="0"/><line nr="388" mi="12" ci="0" mb="2" cb="0"/><line nr="389" mi="1" ci="0" mb="0" cb="0"/><line nr="390" mi="1" ci="0" mb="0" cb="0"/><line nr="398" mi="5" ci="0" mb="0" cb="0"/><line nr="400" mi="5" ci="0" mb="0" cb="0"/><line nr="401" mi="11" ci="0" mb="2" cb="0"/><line nr="402" mi="12" ci="0" mb="0" cb="0"/><line nr="403" mi="1" ci="0" mb="0" cb="0"/><line nr="404" mi="11" ci="0" mb="2" cb="0"/><line nr="405" mi="5" ci="0" mb="0" cb="0"/><line nr="406" mi="7" ci="0" mb="2" cb="0"/><line nr="407" mi="16" ci="0" mb="2" cb="0"/><line nr="409" mi="1" ci="0" mb="0" cb="0"/><line nr="411" mi="1" ci="0" mb="0" cb="0"/><line nr="412" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="5" ci="0" mb="0" cb="0"/><line nr="421" mi="11" ci="0" mb="2" cb="0"/><line nr="422" mi="12" ci="0" mb="0" cb="0"/><line nr="423" mi="7" ci="0" mb="0" cb="0"/><line nr="424" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="5" ci="0" mb="0" cb="0"/><line nr="432" mi="2" ci="0" mb="2" cb="0"/><line nr="433" mi="2" ci="0" mb="0" cb="0"/><line nr="436" mi="3" ci="0" mb="2" cb="0"/><line nr="437" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="439" mi="3" ci="0" mb="2" cb="0"/><line nr="440" mi="6" ci="0" mb="0" cb="0"/><line nr="442" mi="10" ci="0" mb="4" cb="0"/><line nr="443" mi="6" ci="0" mb="0" cb="0"/><line nr="447" mi="6" ci="0" mb="0" cb="0"/><line nr="457" mi="5" ci="0" mb="0" cb="0"/><line nr="461" mi="5" ci="0" mb="0" cb="0"/><line nr="462" mi="12" ci="0" mb="2" cb="0"/><line nr="463" mi="14" ci="0" mb="0" cb="0"/><line nr="464" mi="13" ci="0" mb="0" cb="0"/><line nr="465" mi="17" ci="0" mb="0" cb="0"/><line nr="466" mi="6" ci="0" mb="0" cb="0"/><line nr="467" mi="4" ci="0" mb="0" cb="0"/><line nr="468" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="2" cb="0"/><line nr="470" mi="10" ci="0" mb="0" cb="0"/><line nr="472" mi="3" ci="0" mb="0" cb="0"/><line nr="473" mi="22" ci="0" mb="2" cb="0"/><line nr="474" mi="5" ci="0" mb="0" cb="0"/><line nr="476" mi="5" ci="0" mb="0" cb="0"/><line nr="477" mi="1" ci="0" mb="0" cb="0"/><line nr="479" mi="2" ci="0" mb="0" cb="0"/><line nr="487" mi="5" ci="0" mb="0" cb="0"/><line nr="488" mi="11" ci="0" mb="2" cb="0"/><line nr="489" mi="12" ci="0" mb="0" cb="0"/><line nr="490" mi="7" ci="0" mb="0" cb="0"/><line nr="491" mi="1" ci="0" mb="0" cb="0"/><line nr="498" mi="5" ci="0" mb="0" cb="0"/><line nr="499" mi="2" ci="0" mb="2" cb="0"/><line nr="500" mi="2" ci="0" mb="0" cb="0"/><line nr="503" mi="3" ci="0" mb="2" cb="0"/><line nr="504" mi="3" ci="0" mb="0" cb="0"/><line nr="505" mi="3" ci="0" mb="0" cb="0"/><line nr="506" mi="5" ci="0" mb="4" cb="0"/><line nr="507" mi="6" ci="0" mb="0" cb="0"/><line nr="509" mi="7" ci="0" mb="2" cb="0"/><line nr="510" mi="6" ci="0" mb="0" cb="0"/><line nr="514" mi="6" ci="0" mb="0" cb="0"/><line nr="523" mi="5" ci="0" mb="0" cb="0"/><line nr="527" mi="5" ci="0" mb="0" cb="0"/><line nr="528" mi="12" ci="0" mb="2" cb="0"/><line nr="529" mi="14" ci="0" mb="0" cb="0"/><line nr="530" mi="13" ci="0" mb="0" cb="0"/><line nr="531" mi="17" ci="0" mb="0" cb="0"/><line nr="532" mi="7" ci="0" mb="0" cb="0"/><line nr="533" mi="4" ci="0" mb="0" cb="0"/><line nr="534" mi="4" ci="0" mb="0" cb="0"/><line nr="535" mi="10" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="2" cb="0"/><line nr="537" mi="7" ci="0" mb="0" cb="0"/><line nr="539" mi="3" ci="0" mb="0" cb="0"/><line nr="540" mi="4" ci="0" mb="2" cb="0"/><line nr="541" mi="12" ci="0" mb="0" cb="0"/><line nr="543" mi="16" ci="0" mb="0" cb="0"/><line nr="546" mi="3" ci="0" mb="0" cb="0"/><line nr="547" mi="5" ci="0" mb="0" cb="0"/><line nr="548" mi="1" ci="0" mb="0" cb="0"/><line nr="550" mi="2" ci="0" mb="0" cb="0"/><line nr="558" mi="5" ci="0" mb="0" cb="0"/><line nr="559" mi="11" ci="0" mb="2" cb="0"/><line nr="560" mi="12" ci="0" mb="0" cb="0"/><line nr="561" mi="7" ci="0" mb="0" cb="0"/><line nr="562" mi="1" ci="0" mb="0" cb="0"/><line nr="569" mi="5" ci="0" mb="0" cb="0"/><line nr="570" mi="2" ci="0" mb="2" cb="0"/><line nr="571" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="3" ci="0" mb="2" cb="0"/><line nr="575" mi="3" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="3" ci="0" mb="2" cb="0"/><line nr="578" mi="6" ci="0" mb="0" cb="0"/><line nr="580" mi="10" ci="0" mb="4" cb="0"/><line nr="581" mi="6" ci="0" mb="0" cb="0"/><line nr="585" mi="6" ci="0" mb="0" cb="0"/><line nr="594" mi="5" ci="0" mb="0" cb="0"/><line nr="598" mi="5" ci="0" mb="0" cb="0"/><line nr="599" mi="12" ci="0" mb="2" cb="0"/><line nr="600" mi="14" ci="0" mb="0" cb="0"/><line nr="601" mi="13" ci="0" mb="0" cb="0"/><line nr="602" mi="17" ci="0" mb="0" cb="0"/><line nr="603" mi="6" ci="0" mb="0" cb="0"/><line nr="604" mi="4" ci="0" mb="0" cb="0"/><line nr="605" mi="4" ci="0" mb="0" cb="0"/><line nr="606" mi="3" ci="0" mb="2" cb="0"/><line nr="607" mi="10" ci="0" mb="0" cb="0"/><line nr="609" mi="3" ci="0" mb="0" cb="0"/><line nr="610" mi="22" ci="0" mb="2" cb="0"/><line nr="611" mi="5" ci="0" mb="0" cb="0"/><line nr="613" mi="5" ci="0" mb="0" cb="0"/><line nr="614" mi="1" ci="0" mb="0" cb="0"/><line nr="616" mi="2" ci="0" mb="0" cb="0"/><line nr="624" mi="5" ci="0" mb="0" cb="0"/><line nr="625" mi="11" ci="0" mb="2" cb="0"/><line nr="626" mi="12" ci="0" mb="0" cb="0"/><line nr="627" mi="7" ci="0" mb="0" cb="0"/><line nr="628" mi="1" ci="0" mb="0" cb="0"/><line nr="635" mi="5" ci="0" mb="0" cb="0"/><line nr="636" mi="2" ci="0" mb="2" cb="0"/><line nr="637" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="3" ci="0" mb="2" cb="0"/><line nr="641" mi="3" ci="0" mb="0" cb="0"/><line nr="642" mi="3" ci="0" mb="0" cb="0"/><line nr="643" mi="5" ci="0" mb="4" cb="0"/><line nr="644" mi="6" ci="0" mb="0" cb="0"/><line nr="646" mi="7" ci="0" mb="2" cb="0"/><line nr="647" mi="6" ci="0" mb="0" cb="0"/><line nr="651" mi="6" ci="0" mb="0" cb="0"/><line nr="660" mi="5" ci="0" mb="0" cb="0"/><line nr="664" mi="5" ci="0" mb="0" cb="0"/><line nr="665" mi="12" ci="0" mb="2" cb="0"/><line nr="666" mi="14" ci="0" mb="0" cb="0"/><line nr="667" mi="13" ci="0" mb="0" cb="0"/><line nr="668" mi="17" ci="0" mb="0" cb="0"/><line nr="669" mi="7" ci="0" mb="0" cb="0"/><line nr="670" mi="4" ci="0" mb="0" cb="0"/><line nr="671" mi="4" ci="0" mb="0" cb="0"/><line nr="672" mi="10" ci="0" mb="0" cb="0"/><line nr="673" mi="3" ci="0" mb="2" cb="0"/><line nr="674" mi="7" ci="0" mb="0" cb="0"/><line nr="676" mi="3" ci="0" mb="0" cb="0"/><line nr="677" mi="4" ci="0" mb="2" cb="0"/><line nr="678" mi="12" ci="0" mb="0" cb="0"/><line nr="680" mi="16" ci="0" mb="0" cb="0"/><line nr="683" mi="3" ci="0" mb="0" cb="0"/><line nr="684" mi="5" ci="0" mb="0" cb="0"/><line nr="685" mi="1" ci="0" mb="0" cb="0"/><line nr="687" mi="2" ci="0" mb="0" cb="0"/><line nr="695" mi="5" ci="0" mb="0" cb="0"/><line nr="696" mi="11" ci="0" mb="2" cb="0"/><line nr="697" mi="12" ci="0" mb="0" cb="0"/><line nr="698" mi="7" ci="0" mb="0" cb="0"/><line nr="699" mi="1" ci="0" mb="0" cb="0"/><line nr="708" mi="5" ci="0" mb="0" cb="0"/><line nr="709" mi="11" ci="0" mb="2" cb="0"/><line nr="710" mi="8" ci="0" mb="0" cb="0"/><line nr="711" mi="2" ci="0" mb="0" cb="0"/><line nr="714" mi="3" ci="0" mb="2" cb="0"/><line nr="715" mi="8" ci="0" mb="0" cb="0"/><line nr="716" mi="2" ci="0" mb="0" cb="0"/><line nr="718" mi="2" ci="0" mb="0" cb="0"/><line nr="727" mi="5" ci="0" mb="0" cb="0"/><line nr="728" mi="11" ci="0" mb="2" cb="0"/><line nr="729" mi="8" ci="0" mb="0" cb="0"/><line nr="730" mi="2" ci="0" mb="0" cb="0"/><line nr="733" mi="3" ci="0" mb="2" cb="0"/><line nr="734" mi="7" ci="0" mb="0" cb="0"/><line nr="735" mi="7" ci="0" mb="0" cb="0"/><line nr="736" mi="3" ci="0" mb="0" cb="0"/><line nr="737" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="2" ci="0" mb="0" cb="0"/><line nr="748" mi="5" ci="0" mb="0" cb="0"/><line nr="749" mi="11" ci="0" mb="2" cb="0"/><line nr="750" mi="8" ci="0" mb="0" cb="0"/><line nr="751" mi="2" ci="0" mb="0" cb="0"/><line nr="754" mi="3" ci="0" mb="2" cb="0"/><line nr="755" mi="8" ci="0" mb="0" cb="0"/><line nr="756" mi="2" ci="0" mb="0" cb="0"/><line nr="758" mi="2" ci="0" mb="0" cb="0"/><line nr="767" mi="5" ci="0" mb="0" cb="0"/><line nr="768" mi="11" ci="0" mb="2" cb="0"/><line nr="769" mi="8" ci="0" mb="0" cb="0"/><line nr="770" mi="2" ci="0" mb="0" cb="0"/><line nr="773" mi="3" ci="0" mb="2" cb="0"/><line nr="774" mi="7" ci="0" mb="0" cb="0"/><line nr="775" mi="7" ci="0" mb="0" cb="0"/><line nr="776" mi="3" ci="0" mb="0" cb="0"/><line nr="777" mi="2" ci="0" mb="0" cb="0"/><line nr="779" mi="2" ci="0" mb="0" cb="0"/><line nr="783" mi="4" ci="0" mb="2" cb="0"/><line nr="784" mi="2" ci="0" mb="0" cb="0"/><line nr="787" mi="5" ci="0" mb="0" cb="0"/><line nr="788" mi="2" ci="0" mb="2" cb="0"/><line nr="789" mi="2" ci="0" mb="0" cb="0"/><line nr="792" mi="3" ci="0" mb="0" cb="0"/><line nr="793" mi="5" ci="0" mb="2" cb="0"/><line nr="794" mi="2" ci="0" mb="0" cb="0"/><line nr="797" mi="4" ci="0" mb="2" cb="0"/><line nr="798" mi="2" ci="0" mb="0" cb="0"/><line nr="801" mi="11" ci="0" mb="4" cb="0"/><line nr="802" mi="2" ci="0" mb="0" cb="0"/><line nr="805" mi="7" ci="0" mb="0" cb="0"/><line nr="815" mi="3" ci="0" mb="2" cb="0"/><line nr="816" mi="2" ci="0" mb="0" cb="0"/><line nr="819" mi="4" ci="0" mb="0" cb="0"/><line nr="820" mi="4" ci="0" mb="0" cb="0"/><line nr="821" mi="3" ci="0" mb="0" cb="0"/><line nr="823" mi="17" ci="0" mb="2" cb="0"/><line nr="824" mi="1" ci="0" mb="0" cb="0"/><line nr="825" mi="2" ci="0" mb="0" cb="0"/><line nr="833" mi="11" ci="0" mb="8" cb="0"/><line nr="834" mi="2" ci="0" mb="0" cb="0"/><line nr="837" mi="3" ci="0" mb="2" cb="0"/><line nr="838" mi="4" ci="0" mb="0" cb="0"/><line nr="841" mi="4" ci="0" mb="0" cb="0"/><line nr="843" mi="3" ci="0" mb="0" cb="0"/><line nr="844" mi="6" ci="0" mb="0" cb="0"/><line nr="846" mi="17" ci="0" mb="2" cb="0"/><line nr="847" mi="6" ci="0" mb="0" cb="0"/><line nr="850" mi="2" ci="0" mb="0" cb="0"/><line nr="857" mi="11" ci="0" mb="8" cb="0"/><line nr="858" mi="2" ci="0" mb="0" cb="0"/><line nr="861" mi="3" ci="0" mb="2" cb="0"/><line nr="862" mi="4" ci="0" mb="0" cb="0"/><line nr="865" mi="4" ci="0" mb="0" cb="0"/><line nr="867" mi="3" ci="0" mb="0" cb="0"/><line nr="868" mi="6" ci="0" mb="0" cb="0"/><line nr="870" mi="17" ci="0" mb="2" cb="0"/><line nr="871" mi="6" ci="0" mb="0" cb="0"/><line nr="874" mi="2" ci="0" mb="0" cb="0"/><line nr="878" mi="8" ci="0" mb="0" cb="0"/><line nr="888" mi="4" ci="0" mb="0" cb="0"/><line nr="890" mi="2" ci="0" mb="2" cb="0"/><line nr="891" mi="3" ci="0" mb="0" cb="0"/><line nr="893" mi="6" ci="0" mb="0" cb="0"/><line nr="894" mi="1" ci="0" mb="0" cb="0"/><line nr="895" mi="9" ci="0" mb="0" cb="0"/><line nr="897" mi="2" ci="0" mb="2" cb="0"/><line nr="898" mi="3" ci="0" mb="0" cb="0"/><line nr="911" mi="4" ci="0" mb="0" cb="0"/><line nr="913" mi="2" ci="0" mb="2" cb="0"/><line nr="914" mi="3" ci="0" mb="0" cb="0"/><line nr="916" mi="4" ci="0" mb="0" cb="0"/><line nr="917" mi="1" ci="0" mb="0" cb="0"/><line nr="918" mi="9" ci="0" mb="0" cb="0"/><line nr="920" mi="2" ci="0" mb="2" cb="0"/><line nr="921" mi="3" ci="0" mb="0" cb="0"/><line nr="924" mi="1" ci="0" mb="0" cb="0"/><line nr="934" mi="4" ci="0" mb="0" cb="0"/><line nr="936" mi="2" ci="0" mb="2" cb="0"/><line nr="937" mi="3" ci="0" mb="0" cb="0"/><line nr="939" mi="7" ci="0" mb="0" cb="0"/><line nr="940" mi="1" ci="0" mb="0" cb="0"/><line nr="941" mi="9" ci="0" mb="0" cb="0"/><line nr="943" mi="2" ci="0" mb="2" cb="0"/><line nr="944" mi="3" ci="0" mb="0" cb="0"/><line nr="950" mi="3" ci="0" mb="2" cb="0"/><line nr="951" mi="12" ci="0" mb="4" cb="0"/><line nr="953" mi="3" ci="0" mb="2" cb="0"/><line nr="954" mi="3" ci="0" mb="0" cb="0"/><line nr="955" mi="21" ci="0" mb="8" cb="0"/><line nr="957" mi="2" ci="0" mb="0" cb="0"/><line nr="961" mi="5" ci="0" mb="2" cb="0"/><line nr="962" mi="2" ci="0" mb="0" cb="0"/><line nr="964" mi="5" ci="0" mb="0" cb="0"/><line nr="968" mi="3" ci="0" mb="2" cb="0"/><line nr="969" mi="7" ci="0" mb="0" cb="0"/><line nr="970" mi="3" ci="0" mb="2" cb="0"/><line nr="971" mi="13" ci="0" mb="0" cb="0"/><line nr="973" mi="6" ci="0" mb="0" cb="0"/><line nr="975" mi="1" ci="0" mb="0" cb="0"/><line nr="978" mi="3" ci="0" mb="2" cb="0"/><line nr="979" mi="6" ci="0" mb="0" cb="0"/><line nr="981" mi="3" ci="0" mb="2" cb="0"/><line nr="982" mi="8" ci="0" mb="0" cb="0"/><line nr="985" mi="6" ci="0" mb="0" cb="0"/><line nr="989" mi="3" ci="0" mb="2" cb="0"/><line nr="990" mi="12" ci="0" mb="4" cb="0"/><line nr="992" mi="3" ci="0" mb="2" cb="0"/><line nr="993" mi="3" ci="0" mb="0" cb="0"/><line nr="994" mi="18" ci="0" mb="8" cb="0"/><line nr="996" mi="2" ci="0" mb="0" cb="0"/><line nr="1000" mi="5" ci="0" mb="2" cb="0"/><line nr="1001" mi="2" ci="0" mb="0" cb="0"/><line nr="1003" mi="5" ci="0" mb="0" cb="0"/><line nr="1007" mi="14" ci="0" mb="6" cb="0"/><line nr="1011" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2737" covered="0"/><counter type="BRANCH" missed="292" covered="0"/><counter type="LINE" missed="456" covered="0"/><counter type="COMPLEXITY" missed="295" covered="0"/><counter type="METHOD" missed="149" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><sourcefile name="ChildProcessors.java"/><sourcefile name="OutgoingHandlerConsumers.java"/><sourcefile name="IncomingEndpoint.java"/><sourcefile name="NopEndpointReflectiveProcessorFactory.java"><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RegistryEntry.java"/><sourcefile name="Helper.java"><line nr="11" mi="2" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SourceEndpoint.java"/><sourcefile name="TargetHandler.java"/><sourcefile name="NopEndpointProcessorFactory.java"><line nr="19" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OutgoingEndpoints.java"/><sourcefile name="ProcessorInfo.java"><line nr="20" mi="19" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ProcessorConfig.java"/><sourcefile name="ChildProcessor.java"/><sourcefile name="Factories.java"/><sourcefile name="ProcessorFactoryVisitor.java"><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="11" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="11" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="2" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="11" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="2" cb="0"/><line nr="85" mi="9" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="11" ci="0" mb="2" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="2" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="11" ci="0" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="2" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="35" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="17" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="14" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="14" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="2" cb="0"/><line nr="166" mi="6" ci="0" mb="2" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="15" ci="0" mb="2" cb="0"/><line nr="174" mi="15" ci="0" mb="2" cb="0"/><line nr="176" mi="23" ci="0" mb="2" cb="0"/><line nr="177" mi="23" ci="0" mb="2" cb="0"/><line nr="179" mi="43" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="17" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="2" cb="0"/><line nr="211" mi="12" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="2" cb="0"/><line nr="223" mi="12" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="27" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="17" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="10" ci="0" mb="2" cb="0"/><line nr="258" mi="2" ci="0" mb="2" cb="0"/><line nr="259" mi="9" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="2" cb="0"/><line nr="262" mi="6" ci="0" mb="0" cb="0"/><line nr="265" mi="14" ci="0" mb="0" cb="0"/><line nr="267" mi="27" ci="0" mb="0" cb="0"/><line nr="271" mi="5" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="10" ci="0" mb="0" cb="0"/><line nr="277" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="728" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="110" covered="0"/><counter type="COMPLEXITY" missed="75" covered="0"/><counter type="METHOD" missed="54" covered="0"/><counter type="CLASS" missed="5" covered="0"/></sourcefile><sourcefile name="TargetEndpoint.java"/><counter type="INSTRUCTION" missed="3715" covered="0"/><counter type="BRANCH" missed="342" covered="0"/><counter type="LINE" missed="607" covered="0"/><counter type="COMPLEXITY" missed="398" covered="0"/><counter type="METHOD" missed="227" covered="0"/><counter type="CLASS" missed="18" covered="0"/></package><package name="org/nasdanika/graph/processor/emf"><class name="org/nasdanika/graph/processor/emf/PropertySourceEObjectFactory$1" sourcefilename="PropertySourceEObjectFactory.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/emf/PropertySourceEObjectFactory;Lorg/nasdanika/graph/processor/ProcessorConfig;)V" line="220"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMarkers" desc="()Ljava/util/List;" line="224"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/emf/ProcessorConfigAdapter" sourcefilename="ProcessorConfigAdapter.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;)V" line="15"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAdapterForType" desc="(Ljava/lang/Object;)Z" line="21"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/nasdanika/graph/Element;" line="26"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildProcessorsInfo" desc="()Ljava/util/Map;" line="31"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentProcessorInfo" desc="()Ljava/util/concurrent/CompletionStage;" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistry" desc="()Ljava/util/concurrent/CompletionStage;" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/emf/ResourceSetPropertySourceEObjectFactory$1" sourcefilename="ResourceSetPropertySourceEObjectFactory.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/emf/ResourceSetPropertySourceEObjectFactory;Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/Context;)V" line="157"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="186"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/emf/ResourceSetPropertySourceEObjectFactory" sourcefilename="ResourceSetPropertySourceEObjectFactory.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/nasdanika/common/Context;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="(Lorg/eclipse/emf/common/util/URI;Ljava/lang/String;Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/Context;Lorg/nasdanika/common/ProgressMonitor;)Ljava/util/Collection;" line="65"><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLoadOnDemand" desc="(Lorg/nasdanika/graph/Element;)Z" line="117"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSemanticLoadOnDemanPropertyName" desc="()Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSemanticTypePropertyName" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/emf/common/util/URI;Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/Context;Lorg/nasdanika/common/ProgressMonitor;)Ljava/util/Collection;" line="140"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElementQualifier" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;)Ljava/lang/Object;" line="150"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createElementContext" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;)Lorg/nasdanika/common/Context;" line="155"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="227" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/emf/SemanticProcessor" sourcefilename="SemanticProcessor.java"/><class name="org/nasdanika/graph/processor/emf/NodeProcessorConfigAdapter" sourcefilename="NodeProcessorConfigAdapter.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/NodeProcessorConfig;)V" line="14"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncomingEndpoints" desc="()Ljava/util/Map;" line="19"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncomingHandlerConsumers" desc="()Ljava/util/Map;" line="24"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutgoingEndpoints" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutgoingHandlerConsumers" desc="()Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/nasdanika/graph/Node;" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/emf/AbstractEObjectFactory" sourcefilename="AbstractEObjectFactory.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProcessor" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/ProgressMonitor;)Lorg/nasdanika/graph/processor/ProcessorInfo;" line="36"><counter type="INSTRUCTION" missed="296" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="linkResource" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/eclipse/emf/ecore/resource/Resource;Lorg/nasdanika/common/ProgressMonitor;)V" line="150"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setChildren" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Ljava/util/Map;Lorg/nasdanika/common/ProgressMonitor;)V" line="174"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRegistry" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Ljava/util/Map;Lorg/nasdanika/common/ProgressMonitor;)V" line="210"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPassThrough" desc="(Lorg/nasdanika/graph/Connection;)Z" line="236"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setParent" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;Ljava/util/function/Consumer;)V" line="267"><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setParent" desc="(Lorg/eclipse/emf/ecore/EObject;Lorg/eclipse/emf/ecore/EObject;Lorg/nasdanika/common/ProgressMonitor;)V" line="314"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSource" desc="(Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;)V" line="336"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTarget" desc="(Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;)V" line="364"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncoming" desc="(Lorg/nasdanika/graph/processor/NodeProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/Connection;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;)V" line="398"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOutgoing" desc="(Lorg/nasdanika/graph/processor/NodeProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/Connection;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;)V" line="431"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setParent$12" desc="(Ljava/lang/Throwable;)V" line="320"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setParent$11" desc="(Ljava/util/function/Consumer;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/lang/Object;" line="273"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setParent$10" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/common/ProgressMonitor;Ljava/util/function/Consumer;Lorg/nasdanika/graph/processor/ProcessorInfo;)V" line="272"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$9" desc="(Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/common/ProgressMonitor;Lorg/nasdanika/graph/processor/ProcessorInfo;)V" line="102"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$8" desc="(Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/common/ProgressMonitor;Lorg/nasdanika/graph/processor/ProcessorInfo;)V" line="99"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$7" desc="(Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/graph/Connection;Ljava/util/function/Consumer;)V" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$6" desc="(Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/graph/Connection;Ljava/util/function/Consumer;)V" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$5" desc="(Lorg/nasdanika/graph/processor/NodeProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Ljava/util/Map$Entry;Lorg/nasdanika/common/ProgressMonitor;Lorg/nasdanika/graph/processor/ProcessorInfo;)V" line="87"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$4" desc="(Lorg/nasdanika/graph/processor/NodeProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Ljava/util/Map$Entry;Lorg/nasdanika/common/ProgressMonitor;Lorg/nasdanika/graph/processor/ProcessorInfo;)V" line="82"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$3" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/common/ProgressMonitor;Ljava/util/Map;)V" line="72"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$2" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/common/ProgressMonitor;Ljava/util/Collection;Lorg/nasdanika/graph/processor/ProcessorInfo;)V" line="66"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$1" desc="(Ljava/util/Collection;)Ljava/util/Collection;" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createProcessor$0" desc="(Ljava/util/Collection;Ljava/lang/Void;Ljava/lang/Throwable;)Lorg/nasdanika/graph/processor/ProcessorInfo;" line="40"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="961" covered="0"/><counter type="BRANCH" missed="132" covered="0"/><counter type="LINE" missed="176" covered="0"/><counter type="COMPLEXITY" missed="91" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/emf/LinkedResourcesAdapter" sourcefilename="LinkedResourcesAdapter.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLinkedResources" desc="()Ljava/util/Collection;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAdapterForType" desc="(Ljava/lang/Object;)Z" line="26"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/emf/ConnectionProcessorConfigAdapter" sourcefilename="ConnectionProcessorConfigAdapter.java"><method name="&lt;init&gt;" desc="(Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/nasdanika/graph/Connection;" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceEndpoint" desc="()Ljava/util/concurrent/CompletionStage;" line="21"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSourceHandler" desc="(Ljava/lang/Object;)V" line="26"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTargetEndpoint" desc="()Ljava/util/concurrent/CompletionStage;" line="31"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTargetHandler" desc="(Ljava/lang/Object;)V" line="36"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/emf/AbstractEObjectFactoryProcessorResource" sourcefilename="AbstractEObjectFactoryProcessorResource.java"/><class name="org/nasdanika/graph/processor/emf/PropertySourceEObjectFactory" sourcefilename="PropertySourceEObjectFactory.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyValue" desc="(Lorg/nasdanika/graph/Element;Ljava/lang/String;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyPrefixes" desc="()Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSemanticElements" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/ProgressMonitor;)Ljava/util/Collection;" line="86"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLoadingContext" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/ProgressMonitor;)Lorg/nasdanika/common/Context;" line="128"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="(Lorg/eclipse/emf/common/util/URI;Ljava/lang/String;Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/Context;Lorg/nasdanika/common/ProgressMonitor;)Ljava/util/Collection;" line="137"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="(Ljava/net/URL;Ljava/lang/String;Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/Context;Lorg/nasdanika/common/ProgressMonitor;)Ljava/util/Collection;" line="149"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="(Ljava/io/InputStream;Ljava/lang/String;Lorg/eclipse/emf/common/util/URI;Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/Context;Lorg/nasdanika/common/ProgressMonitor;)Ljava/util/Collection;" line="157"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="(Ljava/io/Reader;Ljava/lang/String;Lorg/eclipse/emf/common/util/URI;Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/common/Context;Lorg/nasdanika/common/ProgressMonitor;)Ljava/util/Collection;" line="167"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCharset" desc="()Ljava/nio/charset/Charset;" line="175"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSpecPropertyName" desc="()Ljava/lang/String;" line="187"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSpecUriPropertyName" desc="()Ljava/lang/String;" line="191"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSemanticUriPropertyName" desc="()Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSpecFormatPropertyName" desc="()Ljava/lang/String;" line="203"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildReferencePropertyName" desc="()Ljava/lang/String;" line="212"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMarked" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;)Lorg/nasdanika/persistence/Marked;" line="216"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildReference" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/eclipse/emf/ecore/EObject;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/ecore/EReference;" line="232"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentReferencePropertyName" desc="()Ljava/lang/String;" line="249"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentReference" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/eclipse/emf/ecore/EObject;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/ecore/EReference;" line="254"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentInjectorPropertyName" desc="()Ljava/lang/String;" line="271"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setParent" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;Ljava/util/function/Consumer;)V" line="276"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createEvaluationContext" desc="()Lorg/springframework/expression/EvaluationContext;" line="300"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceReferencePropertyName" desc="()Ljava/lang/String;" line="305"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceReference" desc="(Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/eclipse/emf/ecore/EObject;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/ecore/EReference;" line="310"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceInjectorPropertyName" desc="()Ljava/lang/String;" line="323"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSource" desc="(Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;)V" line="328"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTargetReferencePropertyName" desc="()Ljava/lang/String;" line="350"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTargetReference" desc="(Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/eclipse/emf/ecore/EObject;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/ecore/EReference;" line="355"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTargetInjectorPropertyName" desc="()Ljava/lang/String;" line="368"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTarget" desc="(Lorg/nasdanika/graph/processor/ConnectionProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;)V" line="373"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncomingReferencePropertyName" desc="()Ljava/lang/String;" line="395"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncomingReference" desc="(Lorg/nasdanika/graph/processor/NodeProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/eclipse/emf/ecore/EObject;Lorg/nasdanika/graph/Connection;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/ecore/EReference;" line="400"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncomingInjectorPropertyName" desc="()Ljava/lang/String;" line="413"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncoming" desc="(Lorg/nasdanika/graph/processor/NodeProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/Connection;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;)V" line="418"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutgoingReferencePropertyName" desc="()Ljava/lang/String;" line="441"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutgoingReference" desc="(Lorg/nasdanika/graph/processor/NodeProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/eclipse/emf/ecore/EObject;Lorg/nasdanika/graph/Connection;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/ecore/EReference;" line="446"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutgoingInjectorPropertyName" desc="()Ljava/lang/String;" line="459"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOutgoing" desc="(Lorg/nasdanika/graph/processor/NodeProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/nasdanika/graph/Connection;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/nasdanika/common/ProgressMonitor;)V" line="464"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildReferencesPropertyName" desc="()Ljava/lang/String;" line="492"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildReference" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/eclipse/emf/ecore/EObject;Lorg/nasdanika/graph/Element;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/ecore/EReference;" line="497"><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildInjectorsPropertyName" desc="()Ljava/lang/String;" line="545"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setChildren" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Ljava/util/Map;Lorg/nasdanika/common/ProgressMonitor;)V" line="550"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistryReferencesPropertyName" desc="()Ljava/lang/String;" line="569"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistryReference" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Lorg/eclipse/emf/ecore/EObject;Lorg/nasdanika/graph/Element;Lorg/nasdanika/graph/processor/ProcessorInfo;Lorg/eclipse/emf/ecore/EObject;)Lorg/eclipse/emf/ecore/EReference;" line="574"><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegistryInjectorsPropertyName" desc="()Ljava/lang/String;" line="623"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRegistry" desc="(Lorg/nasdanika/graph/processor/ProcessorConfig;Lorg/nasdanika/graph/processor/emf/SemanticProcessor;Ljava/util/Map;Lorg/nasdanika/common/ProgressMonitor;)V" line="628"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLinkPagePropertyName" desc="()Ljava/lang/String;" line="644"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1410" covered="0"/><counter type="BRANCH" missed="162" covered="0"/><counter type="LINE" missed="311" covered="0"/><counter type="COMPLEXITY" missed="128" covered="0"/><counter type="METHOD" missed="47" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/processor/emf/GraphProcessorResource" sourcefilename="GraphProcessorResource.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/emf/common/util/URI;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doLoad" desc="(Ljava/io/InputStream;Ljava/util/Map;)V" line="48"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSemanticElements" desc="(Ljava/lang/Object;)Ljava/util/stream/Stream;" line="69"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSemanticElements" desc="(Ljava/util/Map;)Ljava/util/stream/Stream;" line="81"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRoot" desc="(Lorg/eclipse/emf/ecore/EObject;)Z" line="90"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSemanticElements$0" desc="(Lorg/nasdanika/graph/processor/ProcessorInfo;)Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="122" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ProcessorConfigAdapter.java"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="2" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SemanticProcessor.java"/><sourcefile name="NodeProcessorConfigAdapter.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractEObjectFactory.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="2" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="2" cb="0"/><line nr="49" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="2" cb="0"/><line nr="54" mi="10" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="2" cb="0"/><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="24" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="18" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="11" ci="0" mb="2" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="12" ci="0" mb="2" cb="0"/><line nr="82" mi="23" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="2" cb="0"/><line nr="87" mi="23" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="9" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="2" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="11" ci="0" mb="2" cb="0"/><line nr="95" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="18" ci="0" mb="0" cb="0"/><line nr="102" mi="18" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="11" ci="0" mb="2" cb="0"/><line nr="108" mi="8" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="11" ci="0" mb="2" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="2" cb="0"/><line nr="115" mi="11" ci="0" mb="2" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="14" ci="0" mb="2" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="7" ci="0" mb="0" cb="0"/><line nr="153" mi="16" ci="0" mb="2" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="11" ci="0" mb="2" cb="0"/><line nr="175" mi="11" ci="0" mb="2" cb="0"/><line nr="176" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="2" cb="0"/><line nr="178" mi="11" ci="0" mb="2" cb="0"/><line nr="179" mi="12" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="2" cb="0"/><line nr="181" mi="3" ci="0" mb="2" cb="0"/><line nr="182" mi="8" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="2" cb="0"/><line nr="211" mi="11" ci="0" mb="2" cb="0"/><line nr="212" mi="11" ci="0" mb="2" cb="0"/><line nr="213" mi="6" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="2" cb="0"/><line nr="215" mi="11" ci="0" mb="2" cb="0"/><line nr="216" mi="2" ci="0" mb="2" cb="0"/><line nr="217" mi="13" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="2" cb="0"/><line nr="219" mi="3" ci="0" mb="2" cb="0"/><line nr="220" mi="8" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="267" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="2" cb="0"/><line nr="270" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="2" cb="0"/><line nr="272" mi="21" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="2" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="280" mi="11" ci="0" mb="2" cb="0"/><line nr="281" mi="11" ci="0" mb="2" cb="0"/><line nr="282" mi="8" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="2" cb="0"/><line nr="284" mi="8" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="2" cb="0"/><line nr="286" mi="3" ci="0" mb="2" cb="0"/><line nr="287" mi="8" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="2" cb="0"/><line nr="294" mi="8" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="4" cb="0"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="7" ci="0" mb="0" cb="0"/><line nr="318" mi="7" ci="0" mb="0" cb="0"/><line nr="319" mi="10" ci="0" mb="0" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="4" cb="0"/><line nr="338" mi="11" ci="0" mb="2" cb="0"/><line nr="339" mi="11" ci="0" mb="2" cb="0"/><line nr="340" mi="8" ci="0" mb="0" cb="0"/><line nr="341" mi="2" ci="0" mb="2" cb="0"/><line nr="342" mi="3" ci="0" mb="2" cb="0"/><line nr="343" mi="8" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="1" ci="0" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="4" cb="0"/><line nr="366" mi="11" ci="0" mb="2" cb="0"/><line nr="367" mi="11" ci="0" mb="2" cb="0"/><line nr="368" mi="8" ci="0" mb="0" cb="0"/><line nr="369" mi="2" ci="0" mb="2" cb="0"/><line nr="370" mi="3" ci="0" mb="2" cb="0"/><line nr="371" mi="8" ci="0" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="1" ci="0" mb="0" cb="0"/><line nr="378" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="1" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="4" cb="0"/><line nr="400" mi="11" ci="0" mb="2" cb="0"/><line nr="401" mi="11" ci="0" mb="2" cb="0"/><line nr="402" mi="9" ci="0" mb="0" cb="0"/><line nr="403" mi="2" ci="0" mb="2" cb="0"/><line nr="404" mi="3" ci="0" mb="2" cb="0"/><line nr="405" mi="8" ci="0" mb="0" cb="0"/><line nr="407" mi="4" ci="0" mb="0" cb="0"/><line nr="410" mi="1" ci="0" mb="0" cb="0"/><line nr="411" mi="1" ci="0" mb="0" cb="0"/><line nr="413" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="4" ci="0" mb="4" cb="0"/><line nr="433" mi="11" ci="0" mb="2" cb="0"/><line nr="434" mi="11" ci="0" mb="2" cb="0"/><line nr="435" mi="9" ci="0" mb="0" cb="0"/><line nr="436" mi="2" ci="0" mb="2" cb="0"/><line nr="437" mi="3" ci="0" mb="2" cb="0"/><line nr="438" mi="8" ci="0" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="0" cb="0"/><line nr="443" mi="1" ci="0" mb="0" cb="0"/><line nr="444" mi="1" ci="0" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="961" covered="0"/><counter type="BRANCH" missed="132" covered="0"/><counter type="LINE" missed="176" covered="0"/><counter type="COMPLEXITY" missed="91" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConnectionProcessorConfigAdapter.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PropertySourceEObjectFactory.java"><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="4" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="11" ci="0" mb="2" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="4" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="13" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="6" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="11" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="6" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="11" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="138" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="12" ci="0" mb="0" cb="0"/><line nr="157" mi="7" ci="0" mb="0" cb="0"/><line nr="158" mi="13" ci="0" mb="0" cb="0"/><line nr="167" mi="11" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="2" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="15" ci="0" mb="0" cb="0"/><line nr="224" mi="10" ci="0" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="4" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="7" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="2" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="2" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="14" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="2" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="7" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="2" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="2" cb="0"/><line nr="265" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="14" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="0" cb="0"/><line nr="277" mi="2" ci="0" mb="2" cb="0"/><line nr="278" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="4" ci="0" mb="0" cb="0"/><line nr="280" mi="7" ci="0" mb="6" cb="0"/><line nr="281" mi="11" ci="0" mb="2" cb="0"/><line nr="282" mi="11" ci="0" mb="2" cb="0"/><line nr="283" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="5" ci="0" mb="0" cb="0"/><line nr="288" mi="6" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="7" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="2" cb="0"/><line nr="312" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="3" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="2" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="319" mi="14" ci="0" mb="0" cb="0"/><line nr="323" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="6" ci="0" mb="0" cb="0"/><line nr="329" mi="7" ci="0" mb="0" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="331" mi="7" ci="0" mb="6" cb="0"/><line nr="332" mi="11" ci="0" mb="2" cb="0"/><line nr="333" mi="11" ci="0" mb="2" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="5" ci="0" mb="0" cb="0"/><line nr="339" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="346" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="2" ci="0" mb="0" cb="0"/><line nr="355" mi="7" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="2" cb="0"/><line nr="357" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="4" ci="0" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="2" cb="0"/><line nr="362" mi="3" ci="0" mb="0" cb="0"/><line nr="364" mi="14" ci="0" mb="0" cb="0"/><line nr="368" mi="2" ci="0" mb="0" cb="0"/><line nr="373" mi="6" ci="0" mb="0" cb="0"/><line nr="374" mi="7" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="7" ci="0" mb="6" cb="0"/><line nr="377" mi="11" ci="0" mb="2" cb="0"/><line nr="378" mi="11" ci="0" mb="2" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="3" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="383" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="387" mi="5" ci="0" mb="0" cb="0"/><line nr="388" mi="1" ci="0" mb="0" cb="0"/><line nr="389" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="1" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="400" mi="6" ci="0" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="2" cb="0"/><line nr="402" mi="2" ci="0" mb="0" cb="0"/><line nr="404" mi="3" ci="0" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="2" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="409" mi="14" ci="0" mb="0" cb="0"/><line nr="413" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="7" ci="0" mb="0" cb="0"/><line nr="419" mi="6" ci="0" mb="0" cb="0"/><line nr="420" mi="4" ci="0" mb="0" cb="0"/><line nr="421" mi="7" ci="0" mb="6" cb="0"/><line nr="422" mi="11" ci="0" mb="2" cb="0"/><line nr="423" mi="11" ci="0" mb="2" cb="0"/><line nr="424" mi="4" ci="0" mb="0" cb="0"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="5" ci="0" mb="0" cb="0"/><line nr="429" mi="4" ci="0" mb="0" cb="0"/><line nr="430" mi="4" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="433" mi="5" ci="0" mb="0" cb="0"/><line nr="434" mi="1" ci="0" mb="0" cb="0"/><line nr="435" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="1" ci="0" mb="0" cb="0"/><line nr="441" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="6" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="2" cb="0"/><line nr="448" mi="2" ci="0" mb="0" cb="0"/><line nr="450" mi="3" ci="0" mb="0" cb="0"/><line nr="451" mi="4" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="2" cb="0"/><line nr="453" mi="3" ci="0" mb="0" cb="0"/><line nr="455" mi="14" ci="0" mb="0" cb="0"/><line nr="459" mi="2" ci="0" mb="0" cb="0"/><line nr="464" mi="7" ci="0" mb="0" cb="0"/><line nr="465" mi="6" ci="0" mb="0" cb="0"/><line nr="466" mi="4" ci="0" mb="0" cb="0"/><line nr="467" mi="7" ci="0" mb="6" cb="0"/><line nr="468" mi="11" ci="0" mb="2" cb="0"/><line nr="469" mi="11" ci="0" mb="2" cb="0"/><line nr="470" mi="4" ci="0" mb="0" cb="0"/><line nr="471" mi="4" ci="0" mb="0" cb="0"/><line nr="472" mi="3" ci="0" mb="0" cb="0"/><line nr="473" mi="4" ci="0" mb="0" cb="0"/><line nr="474" mi="5" ci="0" mb="0" cb="0"/><line nr="475" mi="4" ci="0" mb="0" cb="0"/><line nr="476" mi="4" ci="0" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="478" mi="5" ci="0" mb="0" cb="0"/><line nr="479" mi="5" ci="0" mb="0" cb="0"/><line nr="480" mi="1" ci="0" mb="0" cb="0"/><line nr="481" mi="1" ci="0" mb="0" cb="0"/><line nr="483" mi="1" ci="0" mb="0" cb="0"/><line nr="492" mi="2" ci="0" mb="0" cb="0"/><line nr="497" mi="2" ci="0" mb="2" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="7" ci="0" mb="0" cb="0"/><line nr="501" mi="3" ci="0" mb="2" cb="0"/><line nr="502" mi="2" ci="0" mb="0" cb="0"/><line nr="504" mi="4" ci="0" mb="0" cb="0"/><line nr="505" mi="4" ci="0" mb="0" cb="0"/><line nr="506" mi="3" ci="0" mb="2" cb="0"/><line nr="507" mi="3" ci="0" mb="0" cb="0"/><line nr="508" mi="11" ci="0" mb="2" cb="0"/><line nr="509" mi="3" ci="0" mb="0" cb="0"/><line nr="510" mi="3" ci="0" mb="2" cb="0"/><line nr="511" mi="3" ci="0" mb="0" cb="0"/><line nr="512" mi="3" ci="0" mb="2" cb="0"/><line nr="513" mi="4" ci="0" mb="0" cb="0"/><line nr="514" mi="5" ci="0" mb="0" cb="0"/><line nr="515" mi="3" ci="0" mb="0" cb="0"/><line nr="516" mi="4" ci="0" mb="0" cb="0"/><line nr="517" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="5" ci="0" mb="0" cb="0"/><line nr="519" mi="4" ci="0" mb="0" cb="0"/><line nr="520" mi="5" ci="0" mb="0" cb="0"/><line nr="522" mi="9" ci="0" mb="2" cb="0"/><line nr="523" mi="3" ci="0" mb="0" cb="0"/><line nr="524" mi="5" ci="0" mb="0" cb="0"/><line nr="525" mi="3" ci="0" mb="2" cb="0"/><line nr="526" mi="3" ci="0" mb="0" cb="0"/><line nr="528" mi="14" ci="0" mb="0" cb="0"/><line nr="530" mi="1" ci="0" mb="0" cb="0"/><line nr="532" mi="1" ci="0" mb="0" cb="0"/><line nr="533" mi="1" ci="0" mb="0" cb="0"/><line nr="534" mi="8" ci="0" mb="0" cb="0"/><line nr="536" mi="1" ci="0" mb="0" cb="0"/><line nr="537" mi="8" ci="0" mb="0" cb="0"/><line nr="539" mi="1" ci="0" mb="0" cb="0"/><line nr="541" mi="8" ci="0" mb="0" cb="0"/><line nr="545" mi="2" ci="0" mb="0" cb="0"/><line nr="550" mi="6" ci="0" mb="0" cb="0"/><line nr="551" mi="4" ci="0" mb="4" cb="0"/><line nr="552" mi="7" ci="0" mb="0" cb="0"/><line nr="553" mi="3" ci="0" mb="2" cb="0"/><line nr="554" mi="11" ci="0" mb="2" cb="0"/><line nr="555" mi="4" ci="0" mb="0" cb="0"/><line nr="556" mi="4" ci="0" mb="0" cb="0"/><line nr="557" mi="3" ci="0" mb="0" cb="0"/><line nr="558" mi="4" ci="0" mb="0" cb="0"/><line nr="559" mi="5" ci="0" mb="0" cb="0"/><line nr="560" mi="4" ci="0" mb="0" cb="0"/><line nr="561" mi="5" ci="0" mb="0" cb="0"/><line nr="562" mi="1" ci="0" mb="0" cb="0"/><line nr="565" mi="1" ci="0" mb="0" cb="0"/><line nr="569" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="2" cb="0"/><line nr="575" mi="2" ci="0" mb="0" cb="0"/><line nr="578" mi="7" ci="0" mb="0" cb="0"/><line nr="579" mi="3" ci="0" mb="2" cb="0"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="582" mi="4" ci="0" mb="0" cb="0"/><line nr="583" mi="4" ci="0" mb="0" cb="0"/><line nr="584" mi="3" ci="0" mb="2" cb="0"/><line nr="585" mi="3" ci="0" mb="0" cb="0"/><line nr="586" mi="11" ci="0" mb="2" cb="0"/><line nr="587" mi="3" ci="0" mb="0" cb="0"/><line nr="588" mi="3" ci="0" mb="2" cb="0"/><line nr="589" mi="3" ci="0" mb="0" cb="0"/><line nr="590" mi="3" ci="0" mb="2" cb="0"/><line nr="591" mi="4" ci="0" mb="0" cb="0"/><line nr="592" mi="5" ci="0" mb="0" cb="0"/><line nr="593" mi="3" ci="0" mb="0" cb="0"/><line nr="594" mi="4" ci="0" mb="0" cb="0"/><line nr="595" mi="5" ci="0" mb="0" cb="0"/><line nr="596" mi="4" ci="0" mb="0" cb="0"/><line nr="597" mi="5" ci="0" mb="0" cb="0"/><line nr="598" mi="4" ci="0" mb="0" cb="0"/><line nr="600" mi="8" ci="0" mb="2" cb="0"/><line nr="601" mi="3" ci="0" mb="0" cb="0"/><line nr="602" mi="5" ci="0" mb="0" cb="0"/><line nr="603" mi="3" ci="0" mb="2" cb="0"/><line nr="604" mi="3" ci="0" mb="0" cb="0"/><line nr="606" mi="14" ci="0" mb="0" cb="0"/><line nr="608" mi="1" ci="0" mb="0" cb="0"/><line nr="610" mi="1" ci="0" mb="0" cb="0"/><line nr="611" mi="1" ci="0" mb="0" cb="0"/><line nr="612" mi="8" ci="0" mb="0" cb="0"/><line nr="614" mi="1" ci="0" mb="0" cb="0"/><line nr="615" mi="8" ci="0" mb="0" cb="0"/><line nr="617" mi="1" ci="0" mb="0" cb="0"/><line nr="619" mi="8" ci="0" mb="0" cb="0"/><line nr="623" mi="2" ci="0" mb="0" cb="0"/><line nr="628" mi="6" ci="0" mb="0" cb="0"/><line nr="629" mi="7" ci="0" mb="0" cb="0"/><line nr="630" mi="5" ci="0" mb="4" cb="0"/><line nr="631" mi="11" ci="0" mb="2" cb="0"/><line nr="632" mi="4" ci="0" mb="0" cb="0"/><line nr="633" mi="4" ci="0" mb="0" cb="0"/><line nr="634" mi="3" ci="0" mb="0" cb="0"/><line nr="635" mi="4" ci="0" mb="0" cb="0"/><line nr="636" mi="5" ci="0" mb="0" cb="0"/><line nr="637" mi="4" ci="0" mb="0" cb="0"/><line nr="638" mi="5" ci="0" mb="0" cb="0"/><line nr="639" mi="1" ci="0" mb="0" cb="0"/><line nr="641" mi="1" ci="0" mb="0" cb="0"/><line nr="644" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1429" covered="0"/><counter type="BRANCH" missed="162" covered="0"/><counter type="LINE" missed="312" covered="0"/><counter type="COMPLEXITY" missed="130" covered="0"/><counter type="METHOD" missed="49" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="GraphProcessorResource.java"><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="8" ci="0" mb="0" cb="0"/><line nr="49" mi="8" ci="0" mb="0" cb="0"/><line nr="50" mi="10" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="10" ci="0" mb="2" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="10" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="10" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="14" ci="0" mb="0" cb="0"/><line nr="90" mi="9" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="122" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LinkedResourcesAdapter.java"><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResourceSetPropertySourceEObjectFactory.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="2" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="2" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="8" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="2" cb="0"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="2" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="11" ci="0" mb="4" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="19" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="2" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="2" cb="0"/><line nr="167" mi="3" ci="0" mb="2" cb="0"/><line nr="168" mi="8" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="2" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="2" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="305" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="64" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="AbstractEObjectFactoryProcessorResource.java"/><counter type="INSTRUCTION" missed="2924" covered="0"/><counter type="BRANCH" missed="346" covered="0"/><counter type="LINE" missed="601" covered="0"/><counter type="COMPLEXITY" missed="286" covered="0"/><counter type="METHOD" missed="113" covered="0"/><counter type="CLASS" missed="10" covered="0"/></package><package name="org/nasdanika/graph"><class name="org/nasdanika/graph/Element" sourcefilename="Element.java"><method name="accept" desc="(Ljava/util/function/Consumer;)V" line="33"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dispatch" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dispatch" desc="(Ljava/util/Collection;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stream" desc="()Ljava/util/stream/Stream;" line="85"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchPredicate" desc="(Ljava/lang/Object;Ljava/lang/String;)Z" line="98"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$stream$10" desc="(Lorg/nasdanika/graph/Element;Ljava/util/Map;)Ljava/util/stream/Stream;" line="86"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$stream$9" desc="(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dispatch$8" desc="(Ljava/util/Collection;Lorg/nasdanika/graph/Element;Ljava/util/Map;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dispatch$7" desc="(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I" line="62"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dispatch$6" desc="(Lorg/nasdanika/graph/Element;Ljava/lang/reflect/Method;)Z" line="61"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dispatch$5" desc="(Ljava/util/Map;Ljava/lang/reflect/Method;)Z" line="60"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dispatch$4" desc="(Lorg/nasdanika/graph/Element;Ljava/lang/reflect/Method;)Z" line="59"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dispatch$3" desc="(Ljava/lang/reflect/Method;)Z" line="58"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dispatch$2" desc="(Ljava/lang/reflect/Method;)Z" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dispatch$1" desc="(Ljava/lang/reflect/Method;)Z" line="56"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accept$0" desc="(Ljava/util/function/Consumer;Lorg/nasdanika/graph/Element;Ljava/util/Map;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="215" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/nasdanika/graph/Node" sourcefilename="Node.java"/><class name="org/nasdanika/graph/Connection" sourcefilename="Connection.java"/><class name="org/nasdanika/graph/Handler" sourcefilename="Handler.java"/><sourcefile name="Node.java"/><sourcefile name="Element.java"><line nr="33" mi="10" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="2" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="10" ci="0" mb="2" cb="0"/><line nr="57" mi="10" ci="0" mb="2" cb="0"/><line nr="58" mi="15" ci="0" mb="4" cb="0"/><line nr="59" mi="11" ci="0" mb="0" cb="0"/><line nr="60" mi="18" ci="0" mb="2" cb="0"/><line nr="61" mi="11" ci="0" mb="0" cb="0"/><line nr="62" mi="13" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="2" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="2" cb="0"/><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="14" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="13" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="215" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Handler.java"/><sourcefile name="Connection.java"/><counter type="INSTRUCTION" missed="215" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><counter type="INSTRUCTION" missed="6854" covered="0"/><counter type="BRANCH" missed="706" covered="0"/><counter type="LINE" missed="1241" covered="0"/><counter type="COMPLEXITY" missed="709" covered="0"/><counter type="METHOD" missed="356" covered="0"/><counter type="CLASS" missed="29" covered="0"/></report>